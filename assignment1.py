# -*- coding: utf-8 -*-
"""assignment1.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11VB7ck0S2WWsEkwaX47ysUd4oEZwmXll
"""

import pandas as pd
from itertools import chain, combinations
from collections import Counter

"""Question 2

---

1)
"""

def cardinality_items(unique_items, new_data):
  all_items =[]
  new_list=[]
  all_items.extend(new_data[0].to_list())
  all_items.extend(new_data[1].to_list())
  all_items.extend(new_data[2].to_list())
  all_items.extend(new_data[3].to_list())
  for val in all_items:
    if(type(val) == str):
      newString=val.strip()
      new_list.append(newString)
  unique_items[:] = list(set(new_list))
  num_unique_items = len(unique_items)-1
  print("Cardinality of the full set of unique items : ", num_unique_items)

"""2) 2á´º - 1

3)
"""

def all_itemsets(all_sets, data):
  all_sets[:] = chain.from_iterable(combinations(data, r) for r in range(int((len(data)+1)/2)))
  print("list of all possible sets : ", len(all_sets)-1)

"""4)"""

def prob_S(set_to_check, given_sets):
  counter = given_sets.count(set_to_check)
  return counter/100

"""Answers

---


"""
def main():
  data = pd.read_csv("basket_data.csv", sep='\t', header=None, index_col=False, names=['Items'])
  new_data = data['Items'].str.split(',', expand = True)
  given_sets = []
  for val in data.itertuples():
    given_sets.append(val[1])
    given_sets
  unique_items = []
  all_sets = []
  cardinality_items(unique_items, new_data)
  all_itemsets(all_sets, unique_items)
  set_to_check = 'ketchup, butter, diapers'
  probability = prob_S(set_to_check, given_sets)
  print("Probability of occuarance : ", probability)

if __name__ == "__main__":
   main()